{"id":1047370719,"lang":"golang","lang_name":"Go","time":"6 days, 1 hour","timestamp":1694515386,"status":10,"status_display":"Accepted","runtime":"203 ms","url":"/submissions/detail/1047370719/","is_pending":"Not Pending","title":"Determine if Two Strings Are Close","memory":"7.2 MB","code":"func closeStrings(word1 string, word2 string) bool {\n    if len(word1) != len(word2) {\n        return false\n    }\n    freq1 := make(map[string]int)\n    freq2 := make(map[string]int)\n\n    check1 := make(map[string]bool)\n    check2 := make(map[string]bool)\n    for i:=0; i<len(word1); i++ {\n        freq1[string(word1[i])]++\n        freq2[string(word2[i])]++\n        check1[string(word1[i])] = true\n        check2[string(word2[i])] = true\n    }\n    if !reflect.DeepEqual(check1, check2) {\n        return false\n    }\n    revFreq1 := make(map[int]int)\n    revFreq2 := make(map[int]int)\n    for _,v := range freq1 {\n        revFreq1[v]++\n    } \n    for _,v := range freq2 {\n        revFreq2[v]++\n    }\n    return reflect.DeepEqual(revFreq1, revFreq2)\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"determine-if-two-strings-are-close","has_notes":false,"flag_type":1}