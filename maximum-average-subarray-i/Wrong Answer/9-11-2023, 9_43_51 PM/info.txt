{"id":1046588902,"lang":"golang","lang_name":"Go","time":"6Â days, 21Â hours","timestamp":1694443431,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1046588902/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"N/A","code":"func m(i, j int) int {\n  if i > j {\n    return i\n  }\n  return j\n}\nfunc findMaxAverage(nums []int, k int) float64 {\n  var max int\n  for i := 0; i < k; i++ {\n    max += nums[i]\n  }\n  for i := 1; i < len(nums) - k + 1; i++ {\n    tmp := max - nums[i-1] + nums[i+k-1]\n    max = m(tmp, max)\n  }\n  return float64(max)/float64(k)\n}","compare_result":"1111111111010111011010100000000000000000000000000000000000000000000000000000101000000010000000000000000000000000000000000000000","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}