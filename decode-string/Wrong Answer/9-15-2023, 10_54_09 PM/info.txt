{"id":1050221950,"lang":"golang","lang_name":"Go","time":"2 days, 20 hours","timestamp":1694793249,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1050221950/","is_pending":"Not Pending","title":"Decode String","memory":"N/A","code":"func decodeString(s string) string {\n    stack := make([]byte, 0)\n    for i := 0; i < len(s); i++ {\n        if s[i] == ']' {\n            count := len(stack) - 1\n            for stack[count] != '[' {\n                count --                \n            }\n            tmpString := make([]byte, len(stack[count + 1:]))\n            copy(tmpString, stack[count + 1:]) \n\t\t\tstack = stack[:count]\n            quantity := 0\n            for len(stack) >0 && (stack[len(stack) - 1] >= '0') && (stack[len(stack) - 1] <= '9') {\n                quantity = quantity * 10 + int(stack[len(stack) - 1] - 48)\n\t\t\t\tstack = stack [:len(stack) - 1]\n            }\n            for i := 0; i < quantity ; i++ {\n                stack = append(stack, tmpString...)\n            }\n        } else {\n            stack = append(stack, s[i])\n        }\n    }\n    return string(stack)\n}","compare_result":"1111110111111111111010100001100101","title_slug":"decode-string","has_notes":false,"flag_type":1}