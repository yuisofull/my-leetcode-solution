{"id":1051722015,"lang":"golang","lang_name":"Go","time":"1 day, 1 hour","timestamp":1694948464,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1051722015/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * type ListNode struct {\n *     Val int\n *     Next *ListNode\n * }\n */\nfunc oddEvenList(head *ListNode) *ListNode {\n    //head1 := head\n    head2 := head.Next\n    i := head\n    j := head.Next\n    var count int\n    for {\n        count++\n        tmp := i.Next\n        i.Next = j.Next\n        if j.Next == nil {\n            if count % 2 == 1{\n                i.Next = head2\n            } else {\n                i = tmp\n                i.Next = head2\n            }\n            break\n        }\n        i = tmp\n        j = j.Next\n    }\n    return head\n}","compare_result":"1111100000000000000000000000000000000000000000000000000000000000000000","title_slug":"odd-even-linked-list","has_notes":false,"flag_type":1}