{"id":1051571862,"lang":"golang","lang_name":"Go","time":"1 day, 5 hours","timestamp":1694932354,"status":10,"status_display":"Accepted","runtime":"320 ms","url":"/submissions/detail/1051571862/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"15.2 MB","code":"/**\n * Definition for singly-linked list.\n * type ListNode struct {\n *     Val int\n *     Next *ListNode\n * }\n */\nfunc deleteMiddle(head *ListNode) *ListNode {\n    var n int\n    for i := head; i != nil; i = i.Next {\n        n++ \n    }\n    p := head\n    var l *ListNode\n    var r *ListNode\n    for i := 1; i <= (n/2 + 1); i++ {\n        if i == n/2 {\n            l = p\n        }\n        if i == (n/2 + 1) {\n            r = p.Next\n        }\n        p = p.Next\n    }\n    if l != nil{\n        l.Next = r\n    } else {\n        return nil\n    }\n    return head\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}